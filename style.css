/* 

How to make dynamic styles using CSS custom properties? 

Make conditional CSS style declaration for dark mode via CSS variables?
*/
:root {
    --text-color: #222;
    --bkg-color: #fff;
}

.dark-mode {
    --text-color: #eee;
    --bkg-color: #121212;
}

body {
    color: var(--text-color);
    background-color: var(--bkg-color);
    /* How to set your footer to the bottom of the page in CSS? */
    min-height: 100vh;
    margin: 0;
}

.icon::before {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    display: inline-block;
    font-style: normal;
    font-variant: normal;
    text-rendering: auto;
    line-height: 1;
}

/* Navbar Section */

/* How do we make a toggle switch from scratch using HTML and CSS?*/
.switch {
    position: relative;
    display: inline-block;
    background-color: gray;
    width: 50px;
    height: 22px;
    border-radius: 35px;
}

label[for='toggle'] {
    grid-row: 1/1;
    grid-column: 10/span 1;
    align-self: center;
}

/* 
How to add font awesome icon via CSS w/o HTML? 

How do we center font-awesome icons that dont have HTML tags?

*/
.switch::after {
    font-family: "Font Awesome 5 Free";
    content: '\f186';
    position: absolute;
    width: 22px;
    left: 0px;
    height: 22px;
    background-color: white;
    border-radius: 50%;
    transition: 1s all;
    font-size: 8px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.checkbox:checked+.switch::after {
    /* Parent Container width - element size - position */
    left: 28px;
    content: '\f185';
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 8px;
    color: var(--bkg-color);
}

.checkbox:checked+.switch {
    background-color: green;
}

.checkbox {
    display: none;
}

.navbar {
    display: grid;
    grid-template-rows: repeat(2, 1fr);
    column-gap: 10px;
    padding: 0.5em 0;
    margin: 0;
}

.upper-nav {
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    grid-template-rows: repeat(1, 1fr);
    column-gap: 10px;
    margin: 0 4rem;
    padding: 0.5em 0;
}


span {
    display: inline-block;
    justify-self: center;
    position: relative;
    border: 1px solid transparent;
    border-radius: 50%;
    width: 45px;
    height: 45px;
    background-color: dimgray;
    grid-column: 1/1;
}

span i {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

}

input[type='search'] {
    grid-column: 8/span 2;
    grid-row: 1/1;
    border-radius: 4px;
    border: 1px solid lightgray;
}

.lower-nav {
    background-color: darkviolet;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.lower-nav>* {
    margin: 0 4rem;
}

.lower-nav>ul {
    list-style: none;
    display: flex;
    justify-content: flex-start;
    gap: 4%;
}

.lower-nav>button {
    border-style: none;
    border-radius: 2px;
    color: white;
    background-color: darkviolet;
    filter: brightness(75%);
    padding: 0.4rem;
}

/* Footer Section  */

footer {
    display: flex;
    position: absolute;
    bottom: 0;
    flex-direction: column;
    width: 100%;
    /* align-content: stretch; */
}

.footer__upper {
    background-color: darkviolet;
    justify-content: center;
    padding: 0.5rem 0;
    align-items: center;
    color: #fff;
    text-align: center;
}

.footer__lower {
    background-color: #222;
    color: #fff;
    height: 8rem;
    position: relative;
}

.footer__upper>ul {
    display: flex;
    list-style: none;
    justify-content: center;
    gap: 3%;
}

.footer__upper>li {
    display: inline-block;
    flex-basis: calc(94%/3);
}

.footer__lower {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.footer__lower>span {
    position: absolute;
    top: 30px;
}

.footer__lower>p {
    position: absolute;
    top: 80px;
}